{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\rjl77\\\\Documents\\\\2021 Spring\\\\CS4261\\\\MatchingGame\\\\Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { NavigationActions } from 'react-navigation';\nimport * as firebase from 'firebase';\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onLoginPress = function () {\n      firebase.auth().signInWithEmailAndPassword(_this.state.email, _this.state.password).then(function () {}, function (error) {\n        Alert.alert(error.message);\n      });\n    };\n\n    _this.onCreateAccountPress = function () {\n      var navActions = NavigationActions.reset({\n        index: 0,\n        actions: [NavigationActions.navigate({\n          routeName: \"Signup\"\n        })]\n      });\n\n      _this.props.navigation.dispatch(navActions);\n    };\n\n    _this.onForgotPasswordPress = function () {\n      var navActions = NavigationActions.reset({\n        index: 0,\n        actions: [NavigationActions.navigate({\n          routeName: \"ForgotPassword\"\n        })]\n      });\n\n      _this.props.navigation.dispatch(navActions);\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          paddingTop: 50,\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, \"Login\"), React.createElement(TextInput, {\n        style: {\n          width: 200,\n          height: 40,\n          borderWidth: 1\n        },\n        value: this.state.email,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            email: text\n          });\n        },\n        placeholder: \"Email\",\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          paddingTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: {\n          width: 200,\n          height: 40,\n          borderWidth: 1\n        },\n        value: this.state.password,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        title: \"Login\",\n        onPress: this.onLoginPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        title: \"Create account...\",\n        onPress: this.onCreateAccountPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        title: \"Forgot Password...\",\n        onPress: this.onForgotPasswordPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/rjl77/Documents/2021 Spring/CS4261/MatchingGame/Login.js"],"names":["React","NavigationActions","firebase","LoginScreen","props","onLoginPress","auth","signInWithEmailAndPassword","state","email","password","then","error","Alert","alert","message","onCreateAccountPress","navActions","reset","index","actions","navigate","routeName","navigation","dispatch","onForgotPasswordPress","paddingTop","alignItems","width","height","borderWidth","text","setState","Component","styles","StyleSheet","create"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;;IAEqBC,W;;;;;AAEjB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAQnBC,YARmB,GAQJ,YAAM;AACjBH,MAAAA,QAAQ,CAACI,IAAT,GAAgBC,0BAAhB,CAA2C,MAAKC,KAAL,CAAWC,KAAtD,EAA6D,MAAKD,KAAL,CAAWE,QAAxE,EACKC,IADL,CACU,YAAM,CAAG,CADnB,EACqB,UAACC,KAAD,EAAW;AAAEC,QAAAA,KAAK,CAACC,KAAN,CAAYF,KAAK,CAACG,OAAlB;AAA6B,OAD/D;AAEH,KAXkB;;AAAA,UAanBC,oBAbmB,GAaI,YAAM;AACzB,UAAIC,UAAU,GAAGhB,iBAAiB,CAACiB,KAAlB,CAAwB;AACrCC,QAAAA,KAAK,EAAE,CAD8B;AAErCC,QAAAA,OAAO,EAAE,CAACnB,iBAAiB,CAACoB,QAAlB,CAA2B;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAA3B,CAAD;AAF4B,OAAxB,CAAjB;;AAIA,YAAKlB,KAAL,CAAWmB,UAAX,CAAsBC,QAAtB,CAA+BP,UAA/B;AACH,KAnBkB;;AAAA,UAqBnBQ,qBArBmB,GAqBK,YAAM;AAC1B,UAAIR,UAAU,GAAGhB,iBAAiB,CAACiB,KAAlB,CAAwB;AACrCC,QAAAA,KAAK,EAAE,CAD8B;AAErCC,QAAAA,OAAO,EAAE,CAACnB,iBAAiB,CAACoB,QAAlB,CAA2B;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAA3B,CAAD;AAF4B,OAAxB,CAAjB;;AAIA,YAAKlB,KAAL,CAAWmB,UAAX,CAAsBC,QAAtB,CAA+BP,UAA/B;AACH,KA3BkB;;AAEf,UAAKT,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFe;AAMlB;;;;6BAuBQ;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACgB,UAAAA,UAAU,EAAC,EAAZ;AAAgBC,UAAAA,UAAU,EAAC;AAA3B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAII,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,GAAR;AAAaC,UAAAA,MAAM,EAAE,EAArB;AAAyBC,UAAAA,WAAW,EAAE;AAAtC,SAAlB;AACI,QAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWC,KADtB;AAEI,QAAA,YAAY,EAAE,sBAACsB,IAAD,EAAU;AAAE,UAAA,MAAI,CAACC,QAAL,CAAc;AAACvB,YAAAA,KAAK,EAAEsB;AAAR,WAAd;AAA8B,SAF5D;AAGI,QAAA,WAAW,EAAC,OAHhB;AAII,QAAA,YAAY,EAAC,eAJjB;AAKI,QAAA,cAAc,EAAC,MALnB;AAMI,QAAA,WAAW,EAAE,KANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAaI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACL,UAAAA,UAAU,EAAC;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,EAeI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAE,GAAR;AAAaC,UAAAA,MAAM,EAAE,EAArB;AAAyBC,UAAAA,WAAW,EAAE;AAAtC,SAAlB;AACI,QAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWE,QADtB;AAEI,QAAA,YAAY,EAAE,sBAACqB,IAAD,EAAU;AAAE,UAAA,MAAI,CAACC,QAAL,CAAc;AAACtB,YAAAA,QAAQ,EAAEqB;AAAX,WAAd;AAAiC,SAF/D;AAGI,QAAA,WAAW,EAAC,UAHhB;AAII,QAAA,eAAe,EAAE,IAJrB;AAKI,QAAA,cAAc,EAAC,MALnB;AAMI,QAAA,WAAW,EAAE,KANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAwBI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAE,KAAK1B,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBJ,EAyBI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,mBAAd;AAAkC,QAAA,OAAO,EAAE,KAAKW,oBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBJ,EA0BI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,oBAAd;AAAmC,QAAA,OAAO,EAAE,KAAKS,qBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BJ,CADJ;AA8BH;;;;EA9DoCzB,KAAK,CAACiC,S;;SAA1B9B,W;AAiErB,IAAM+B,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport { StyleSheet, View, Text, TextInput, Button, Alert } from 'react-native';\r\nimport { NavigationActions } from 'react-navigation';\r\nimport * as firebase from 'firebase';\r\n\r\nexport default class LoginScreen extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            email: \"\",\r\n            password: \"\",\r\n        };\r\n    }\r\n\r\n    onLoginPress = () => {\r\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then(() => { }, (error) => { Alert.alert(error.message); });\r\n    }\r\n\r\n    onCreateAccountPress = () => {\r\n        var navActions = NavigationActions.reset({\r\n            index: 0,\r\n            actions: [NavigationActions.navigate({routeName: \"Signup\"})]\r\n        });\r\n        this.props.navigation.dispatch(navActions);\r\n    }\r\n\r\n    onForgotPasswordPress = () => {\r\n        var navActions = NavigationActions.reset({\r\n            index: 0,\r\n            actions: [NavigationActions.navigate({routeName: \"ForgotPassword\"})]\r\n        });\r\n        this.props.navigation.dispatch(navActions);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={{paddingTop:50, alignItems:\"center\"}}>\r\n\r\n                <Text>Login</Text> \r\n\r\n                <TextInput style={{width: 200, height: 40, borderWidth: 1}}\r\n                    value={this.state.email}\r\n                    onChangeText={(text) => { this.setState({email: text}) }}\r\n                    placeholder=\"Email\"\r\n                    keyboardType=\"email-address\"\r\n                    autoCapitalize=\"none\"\r\n                    autoCorrect={false}\r\n                />\r\n\r\n                <View style={{paddingTop:10}} />\r\n\r\n                <TextInput style={{width: 200, height: 40, borderWidth: 1}}\r\n                    value={this.state.password}\r\n                    onChangeText={(text) => { this.setState({password: text}) }}\r\n                    placeholder=\"Password\"\r\n                    secureTextEntry={true}\r\n                    autoCapitalize=\"none\"\r\n                    autoCorrect={false}\r\n                />\r\n\r\n                <Button title=\"Login\" onPress={this.onLoginPress} />\r\n                <Button title=\"Create account...\" onPress={this.onCreateAccountPress} />\r\n                <Button title=\"Forgot Password...\" onPress={this.onForgotPasswordPress} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n\r\n});"]},"metadata":{},"sourceType":"module"}