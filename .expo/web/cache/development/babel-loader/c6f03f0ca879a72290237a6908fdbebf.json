{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\rjl77\\\\Documents\\\\2021 Spring\\\\CS4261\\\\MatchingGame\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Card from \"./Card\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDjpBHzrVMHIGsNPChMkmwD_Ul4tvaSPck\",\n  authDomain: \"memorygame-6cead.firebaseapp.com\",\n  projectId: \"memorygame-6cead\",\n  storageBucket: \"memorygame-6cead.appspot.com\",\n  messagingSenderId: \"301340557441\",\n  appId: \"1:301340557441:web:7aae6deea2ccd9ee578d80\",\n  measurementId: \"G-057X6R3NLJ\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      cardSymbols: ['😎', '😱', '🤡', '👻', '👀', '🐶', '🥃', '🏀'],\n      cardSymbolsInRand: [],\n      isOpen: [],\n      firstPickedIndex: null,\n      secondPickedIndex: null,\n      steps: 0,\n      isEnded: false\n    };\n\n    _this.initGame = function () {\n      var newCardsSymbols = [].concat(_toConsumableArray(_this.state.cardSymbols), _toConsumableArray(_this.state.cardSymbols));\n\n      var cardSymbolsInRand = _this.shuffleArray(newCardsSymbols);\n\n      var isOpen = [];\n\n      for (var i = 0; i < newCardsSymbols.length; i++) {\n        isOpen.push(false);\n      }\n\n      _this.setState({\n        cardSymbolsInRand: cardSymbolsInRand,\n        isOpen: isOpen\n      });\n    };\n\n    _this.shuffleArray = function (arr) {\n      var newArr = arr.slice();\n\n      for (var i = newArr.length - 1; i > 0; i--) {\n        var rand = Math.floor(Math.random() * (i + 1));\n        var _ref = [newArr[rand], newArr[i]];\n        newArr[i] = _ref[0];\n        newArr[rand] = _ref[1];\n      }\n\n      return newArr;\n    };\n\n    _this.cardPressHandler = function (index) {\n      var isOpen = _toConsumableArray(_this.state.isOpen);\n\n      if (isOpen[index]) {\n        return;\n      }\n\n      isOpen[index] = true;\n\n      if (_this.state.firstPickedIndex == null && _this.state.secondPickedIndex == null) {\n        _this.setState({\n          isOpen: isOpen,\n          firstPickedIndex: index\n        });\n      } else if (_this.state.firstPickedIndex != null && _this.state.secondPickedIndex == null) {\n        _this.setState({\n          isOpen: isOpen,\n          secondPickedIndex: index\n        });\n      }\n\n      _this.setState({\n        steps: _this.state.steps + 1\n      });\n    };\n\n    _this.calculateGameResult = function () {\n      if (_this.state.firstPickedIndex != null && _this.state.secondPickedIndex != null) {\n        if (_this.state.cardSymbolsInRand.length > 0) {\n          var totalOpens = _this.state.isOpen.filter(function (isOpen) {\n            return isOpen;\n          });\n\n          if (totalOpens.length === _this.state.cardSymbolsInRand.length) {\n            _this.setState({\n              isEnded: true\n            });\n\n            firebase.auth().signInWithEmailAndPassword(\"Test\", \"Fake\").then(function () {}, function (error) {\n              Alert.alert(error.message);\n            });\n            return;\n          }\n        }\n\n        var firstSymbol = _this.state.cardSymbolsInRand[_this.state.firstPickedIndex];\n        var secondSymbol = _this.state.cardSymbolsInRand[_this.state.secondPickedIndex];\n\n        if (firstSymbol != secondSymbol) {\n          setTimeout(function () {\n            var isOpen = _toConsumableArray(_this.state.isOpen);\n\n            isOpen[_this.state.firstPickedIndex] = false;\n            isOpen[_this.state.secondPickedIndex] = false;\n\n            _this.setState({\n              firstPickedIndex: null,\n              secondPickedIndex: null,\n              isOpen: isOpen\n            });\n          }, 1000);\n        } else {\n          _this.setState({\n            firstPickedIndex: null,\n            secondPickedIndex: null\n          });\n        }\n      }\n    };\n\n    _this.resetGame = function () {\n      _this.initGame();\n\n      _this.setState({\n        firstPickedIndex: null,\n        secondPickedIndex: null,\n        steps: 0,\n        isEnded: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initGame();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevPops, prevState) {\n      if (prevState.secondPickedIndex != this.state.secondPickedIndex) {\n        this.calculateGameResult();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }), React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.heading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }, \" Matching Game \")), React.createElement(View, {\n        style: styles.main,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.gameBoard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, this.state.cardSymbolsInRand.map(function (symbol, index) {\n        return React.createElement(Card, {\n          key: index,\n          onPress: function onPress() {\n            return _this2.cardPressHandler(index);\n          },\n          style: styles.button,\n          fontSize: 30,\n          title: symbol,\n          cover: \"\\u2753\",\n          isShow: _this2.state.isOpen[index],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }\n        });\n      }))), React.createElement(View, {\n        style: styles.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.footing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, \" \", this.state.isEnded ? \"Congrats! You have completed in \" + this.state.steps + \" steps.\" : \"You have tried \" + this.state.steps + \" times(s).\"), this.state.isEnded ? React.createElement(TouchableOpacity, {\n        onPress: this.resetGame,\n        style: styles.tryAgainButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.tryAgainButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }, \"Try Again\")) : null, React.createElement(Text, {\n        style: styles.footing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, \"   \"), React.createElement(Text, {\n        style: styles.footing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, \" Published by Andy & Ryan \"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'yellow'\n  },\n  header: {\n    flex: 1,\n    backgroundColor: '#eee',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  heading: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  main: {\n    flex: 3,\n    backgroundColor: '#fff'\n  },\n  buttonText: {},\n  footer: {\n    flex: 1,\n    backgroundColor: '#eee',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  footing: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  gameBoard: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center'\n  },\n  button: {\n    backgroundColor: '#ccc',\n    borderRadius: 8,\n    width: 48,\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: (Dimensions.get('window').width - 48 * 4) / (5 * 2)\n  },\n  buttonText: {\n    fontSize: 30\n  },\n  tryAgainButton: {\n    backgroundColor: 'steelblue',\n    padding: 8,\n    borderRadius: 8,\n    marginTop: 20\n  },\n  tryAgainButtonText: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/rjl77/Documents/2021 Spring/CS4261/MatchingGame/App.js"],"names":["React","Component","Card","firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","App","state","cardSymbols","cardSymbolsInRand","isOpen","firstPickedIndex","secondPickedIndex","steps","isEnded","initGame","newCardsSymbols","shuffleArray","i","length","push","setState","arr","newArr","slice","rand","Math","floor","random","cardPressHandler","index","calculateGameResult","totalOpens","filter","auth","signInWithEmailAndPassword","then","error","Alert","alert","message","firstSymbol","secondSymbol","setTimeout","resetGame","prevPops","prevState","styles","container","header","heading","main","gameBoard","map","symbol","button","footer","footing","tryAgainButton","tryAgainButtonText","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","fontSize","fontWeight","textAlign","buttonText","flexDirection","flexWrap","alignContent","borderRadius","width","height","margin","Dimensions","get","padding","marginTop"],"mappings":"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","sourcesContent":["// run 'npm start' in the path folder in terminal\r\n\r\nimport React, { Component } from 'react';\r\nimport { \r\n  StatusBar,\r\n  StyleSheet, \r\n  Text, \r\n  View, //<div>\r\n  SafeAreaView, // for iphone XR or later version\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  Alert,\r\n} from 'react-native';\r\n\r\nimport Card from './Card'\r\n\r\n// Firebase App (the core Firebase SDK) is always required and\r\n// must be listed before other Firebase SDKs\r\nimport firebase from \"firebase/app\";\r\n\r\n// Add the Firebase services that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// TODO: Replace the following with your app's Firebase project configuration\r\n// For Firebase JavaScript SDK v7.20.0 and later, `measurementId` is an optional field\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDjpBHzrVMHIGsNPChMkmwD_Ul4tvaSPck\",\r\n  authDomain: \"memorygame-6cead.firebaseapp.com\",\r\n  projectId: \"memorygame-6cead\",\r\n  storageBucket: \"memorygame-6cead.appspot.com\",\r\n  messagingSenderId: \"301340557441\",\r\n  appId: \"1:301340557441:web:7aae6deea2ccd9ee578d80\",\r\n  measurementId: \"G-057X6R3NLJ\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n//firebase.analytics();\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    cardSymbols: [\r\n      '😎', '😱', '🤡', '👻', '👀', '🐶', '🥃', '🏀',\r\n    ],\r\n    cardSymbolsInRand: [],\r\n    isOpen: [],\r\n    firstPickedIndex: null,\r\n    secondPickedIndex: null,\r\n    steps: 0,\r\n    isEnded: false,\r\n  }\r\n\r\n  initGame = () => {\r\n    let newCardsSymbols = [...this.state.cardSymbols, ...this.state.cardSymbols]\r\n    let cardSymbolsInRand = this.shuffleArray(newCardsSymbols)\r\n\r\n    let isOpen = []\r\n\r\n    for (let i = 0; i < newCardsSymbols.length; i++) {\r\n      isOpen.push(false)\r\n    }\r\n\r\n    this.setState({\r\n      cardSymbolsInRand,\r\n      isOpen,\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initGame()\r\n  }\r\n\r\n  shuffleArray = (arr) => {\r\n    const newArr = arr.slice()\r\n    for (let i = newArr.length - 1; i > 0; i--) {\r\n      const rand = Math.floor(Math.random() * (i + 1));\r\n      [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]]\r\n    }\r\n    return newArr\r\n  }\r\n\r\n  cardPressHandler = (index) => {\r\n    let isOpen = [...this.state.isOpen]\r\n\r\n    // deal with the problem of double clicking on the card which is already opened\r\n    if (isOpen[index]) {\r\n      return;\r\n    }\r\n\r\n    isOpen[index] = true\r\n\r\n    if (this.state.firstPickedIndex == null && this.state.secondPickedIndex == null) {\r\n      this.setState({\r\n        isOpen,\r\n        firstPickedIndex: index,\r\n      })\r\n    } else if (this.state.firstPickedIndex != null && this.state.secondPickedIndex == null){\r\n      this.setState({\r\n        isOpen,\r\n        secondPickedIndex: index,\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      steps: this.state.steps + 1,\r\n    })\r\n  }\r\n\r\n  calculateGameResult = () => {\r\n    if (this.state.firstPickedIndex != null && this.state.secondPickedIndex != null) {\r\n      \r\n      if (this.state.cardSymbolsInRand.length > 0) {\r\n        let totalOpens = this.state.isOpen.filter((isOpen) => isOpen)\r\n        if (totalOpens.length === this.state.cardSymbolsInRand.length) {\r\n          this.setState({\r\n            isEnded: true,\r\n          })\r\n\r\n          firebase.auth().signInWithEmailAndPassword(\"Test\", \"Fake\")\r\n            .then(() => { }, (error) => { Alert.alert(error.message); });\r\n\r\n          return \r\n        }\r\n      }\r\n\r\n\r\n      let firstSymbol = this.state.cardSymbolsInRand[this.state.firstPickedIndex]\r\n      let secondSymbol = this.state.cardSymbolsInRand[this.state.secondPickedIndex]\r\n\r\n      if (firstSymbol != secondSymbol) {\r\n        setTimeout(() => {\r\n          let isOpen = [...this.state.isOpen]\r\n          isOpen[this.state.firstPickedIndex] = false\r\n          isOpen[this.state.secondPickedIndex] = false\r\n\r\n          this.setState({\r\n            firstPickedIndex: null,\r\n            secondPickedIndex: null,\r\n            isOpen,\r\n          })\r\n        }, 1000)\r\n      } else {\r\n        this.setState({\r\n          firstPickedIndex: null,\r\n          secondPickedIndex: null,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevPops, prevState) {\r\n    if (prevState.secondPickedIndex != this.state.secondPickedIndex) {\r\n      this.calculateGameResult()\r\n    }\r\n  }\r\n\r\n  resetGame = () => {\r\n    this.initGame()\r\n\r\n    this.setState({\r\n      firstPickedIndex: null,\r\n      secondPickedIndex: null,\r\n      steps: 0,\r\n      isEnded: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <StatusBar />\r\n        <SafeAreaView style={ styles.container }>\r\n          <View style={ styles.header }>\r\n            <Text style={ styles.heading }> Matching Game </Text>\r\n          </View>\r\n          <View style={ styles.main }>\r\n            <View style={ styles.gameBoard}>\r\n              {this.state.cardSymbolsInRand.map((symbol, index) =>\r\n                <Card key={index} onPress={ () => this.cardPressHandler(index)} style={ styles.button } fontSize={30} title={symbol} cover=\"❓\" isShow={this.state.isOpen[index]}/>\r\n              )}\r\n            </View>\r\n          </View>\r\n          <View style={ styles.footer }>\r\n            <Text style={ styles.footing }> {\r\n              this.state.isEnded \r\n                ? `Congrats! You have completed in ${this.state.steps} steps.`\r\n                : `You have tried ${this.state.steps} times(s).`\r\n            }</Text>\r\n            {this.state.isEnded ?\r\n              <TouchableOpacity onPress={ this.resetGame } style={ styles.tryAgainButton}>\r\n                <Text style={ styles.tryAgainButtonText}>Try Again</Text>\r\n              </TouchableOpacity>\r\n              : null\r\n            }\r\n            <Text style={ styles.footing }>   </Text>\r\n            <Text style={ styles.footing }> Published by Andy & Ryan </Text>\r\n          </View>\r\n        </SafeAreaView>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'yellow',\r\n  },\r\n  header: {\r\n    flex: 1,\r\n    backgroundColor: '#eee',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  heading : {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  main: {\r\n    flex: 3,\r\n    backgroundColor: '#fff',\r\n  },\r\n  buttonText: {\r\n\r\n  },\r\n  footer: {\r\n    flex: 1,\r\n    backgroundColor: '#eee',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  footing : {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  gameBoard: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    alignContent: 'center',\r\n  },\r\n  button: {\r\n    backgroundColor: '#ccc',\r\n    borderRadius: 8,\r\n    width: 48,\r\n    height: 48,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    margin: (Dimensions.get('window').width - (48*4)) / (5*2),\r\n  },\r\n  buttonText: {\r\n    fontSize: 30,\r\n  },\r\n  tryAgainButton: {\r\n    backgroundColor: 'steelblue',\r\n    padding: 8,\r\n    borderRadius: 8,\r\n    marginTop: 20,\r\n  },\r\n  tryAgainButtonText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}