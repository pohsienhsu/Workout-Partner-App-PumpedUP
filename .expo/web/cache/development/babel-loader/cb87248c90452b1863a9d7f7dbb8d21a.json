{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\rjl77\\\\Documents\\\\2021 Spring\\\\CS4261\\\\MatchingGame\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AppLoading, Asset, Font } from 'expo';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport Game from \"./Game\";\nimport Card from \"./Card\";\nimport Login from \"./Login\";\nimport ApiKeys from \"./ApiKeys\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.onAuthStateChanged = function (user) {\n      _this.setState({\n        isAuthenticationReady: true\n      });\n\n      _this.setState({\n        isAuthenticated: !!user\n      });\n    };\n\n    _this.state = {\n      isLoadingComplete: false,\n      isAuthenticationReady: false,\n      isAuthenticated: false\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(ApiKeys.FirebaseConfig);\n    }\n\n    firebase.auth().onAuthStateChanged(_this.onAuthStateChanged);\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.isAuthenticated);\n\n      if ((!this.state.isLoadingComplete || !this.state.isAuthenticationReady) && !this.props.skipLoadingScreen) {\n        return React.createElement(Login, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        });\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }\n        }, this.state.isAuthenticated ? React.createElement(Game, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 43\n          }\n        }) : React.createElement(Login, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 54\n          }\n        }));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/rjl77/Documents/2021 Spring/CS4261/MatchingGame/App.js"],"names":["React","Component","AppLoading","Asset","Font","firebase","Game","Card","Login","ApiKeys","App","props","onAuthStateChanged","user","setState","isAuthenticationReady","isAuthenticated","state","isLoadingComplete","apps","length","initializeApp","FirebaseConfig","auth","console","log","skipLoadingScreen","styles","container","StyleSheet","create"],"mappings":";;;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;AAWA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,IAA5B,QAAwC,MAAxC;AAIA,OAAOC,QAAP,MAAqB,cAArB;AAGA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,OAAOC,IAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;;IAGMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAanBC,kBAbmB,GAaE,UAACC,IAAD,EAAU;AAC7B,YAAKC,QAAL,CAAc;AAACC,QAAAA,qBAAqB,EAAE;AAAxB,OAAd;;AACA,YAAKD,QAAL,CAAc;AAACE,QAAAA,eAAe,EAAE,CAAC,CAACH;AAApB,OAAd;AACD,KAhBkB;;AAEjB,UAAKI,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE,KADR;AAEXH,MAAAA,qBAAqB,EAAE,KAFZ;AAGXC,MAAAA,eAAe,EAAE;AAHN,KAAb;;AAOA,QAAI,CAACX,QAAQ,CAACc,IAAT,CAAcC,MAAnB,EAA2B;AAAEf,MAAAA,QAAQ,CAACgB,aAAT,CAAuBZ,OAAO,CAACa,cAA/B;AAAiD;;AAC9EjB,IAAAA,QAAQ,CAACkB,IAAT,GAAgBX,kBAAhB,CAAmC,MAAKA,kBAAxC;AAViB;AAWlB;;;;6BAOQ;AACPY,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWD,eAAvB;;AACA,UAAK,CAAC,CAAC,KAAKC,KAAL,CAAWC,iBAAZ,IAAiC,CAAC,KAAKD,KAAL,CAAWF,qBAA9C,KAAwE,CAAC,KAAKJ,KAAL,CAAWe,iBAAzF,EAA4G;AAQ1G,eAAQ,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD,OATD,MASO;AACL,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,KAAKX,KAAL,CAAWD,eAAZ,GAA+B,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA/B,GAA0C,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD7C,CADF;AAKD;AACF;;;;EAtCef,S;;AAyClB,eAAeS,GAAf;AAEA,IAAMiB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["// run 'npm start' in the path folder in terminal\r\n\r\nimport React, { Component } from 'react';\r\nimport { \r\n  StatusBar,\r\n  StyleSheet, \r\n  Text, \r\n  View, //<div>\r\n  SafeAreaView, // for iphone XR or later version\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  Alert,\r\n} from 'react-native';\r\nimport { AppLoading, Asset, Font } from 'expo';\r\n\r\n// Firebase App (the core Firebase SDK) is always required and\r\n// must be listed before other Firebase SDKs\r\nimport firebase from \"firebase/app\";\r\n\r\n// Add the Firebase services that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nimport Game from './Game'\r\nimport Card from './Card'\r\nimport Login from './Login'\r\nimport ApiKeys from './ApiKeys';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoadingComplete: false,\r\n      isAuthenticationReady: false,\r\n      isAuthenticated: false,\r\n    };\r\n\r\n    // Initialize firebase...\r\n    if (!firebase.apps.length) { firebase.initializeApp(ApiKeys.FirebaseConfig); }\r\n    firebase.auth().onAuthStateChanged(this.onAuthStateChanged);\r\n  }\r\n\r\n  onAuthStateChanged = (user) => {\r\n    this.setState({isAuthenticationReady: true});\r\n    this.setState({isAuthenticated: !!user});\r\n  }\r\n  \r\n  render() {\r\n    console.log(this.state.isAuthenticated);\r\n    if ( (!this.state.isLoadingComplete || !this.state.isAuthenticationReady) && !this.props.skipLoadingScreen) {\r\n      // return (\r\n      //   <AppLoading\r\n      //     startAsync={this._loadResourcesAsync}\r\n      //     onError={this._handleLoadingError}\r\n      //     onFinish={this._handleFinishLoading}\r\n      //   />\r\n      // );\r\n      return (<Login/>)\r\n    } else {\r\n      return (\r\n        <View style={styles.container}>\r\n          {(this.state.isAuthenticated) ? <Game /> : <Login />}\r\n        </View>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\nconst styles = StyleSheet.create({\r\n  // container: {\r\n  //   flex: 1,\r\n  //   backgroundColor: 'yellow',\r\n  // },\r\n  // header: {\r\n  //   flex: 1,\r\n  //   backgroundColor: '#eee',\r\n  //   justifyContent: 'center',\r\n  //   alignItems: 'center',\r\n  // },\r\n  // heading : {\r\n  //   fontSize: 36,\r\n  //   fontWeight: 'bold',\r\n  //   textAlign: 'center',\r\n  // },\r\n  // main: {\r\n  //   flex: 3,\r\n  //   backgroundColor: '#fff',\r\n  // },\r\n  // buttonText: {\r\n\r\n  // },\r\n  // footer: {\r\n  //   flex: 1,\r\n  //   backgroundColor: '#eee',\r\n  //   justifyContent: 'center',\r\n  //   alignItems: 'center',\r\n  // },\r\n  // footing : {\r\n  //   fontSize: 20,\r\n  //   fontWeight: 'bold',\r\n  //   textAlign: 'center',\r\n  // },\r\n  // gameBoard: {\r\n  //   flex: 1,\r\n  //   flexDirection: 'row',\r\n  //   flexWrap: 'wrap',\r\n  //   justifyContent: 'center',\r\n  //   alignItems: 'center',\r\n  //   alignContent: 'center',\r\n  // },\r\n  // button: {\r\n  //   backgroundColor: '#ccc',\r\n  //   borderRadius: 8,\r\n  //   width: 48,\r\n  //   height: 48,\r\n  //   justifyContent: 'center',\r\n  //   alignItems: 'center',\r\n  //   margin: (Dimensions.get('window').width - (48*4)) / (5*2),\r\n  // },\r\n  // buttonText: {\r\n  //   fontSize: 30,\r\n  // },\r\n  // tryAgainButton: {\r\n  //   backgroundColor: 'steelblue',\r\n  //   padding: 8,\r\n  //   borderRadius: 8,\r\n  //   marginTop: 20,\r\n  // },\r\n  // tryAgainButtonText: {\r\n  //   fontSize: 18,\r\n  //   fontWeight: 'bold',\r\n  // }\r\n})"]},"metadata":{},"sourceType":"module"}